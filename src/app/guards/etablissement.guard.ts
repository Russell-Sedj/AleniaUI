import { Injectable } from '@angular/core';
import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { AuthService } from '../services/auth/auth.service';

@Injectable({
  providedIn: 'root'
})
export class EtablissementGuard implements CanActivate {
  constructor(
    private authService: AuthService,
    private router: Router
  ) {}

  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {
    console.log('üõ°Ô∏è EtablissementGuard - V√©rification acc√®s √©tablissement');
    
    // D'abord initialiser le contexte utilisateur √©tablissement
    this.authService.initializeUserContext('etablissement');
    
    // V√©rifier si l'utilisateur est connect√© et est bien un √©tablissement
    if (this.authService.isAuthenticated() && this.authService.isUserType('etablissement')) {
      console.log('‚úÖ Acc√®s √©tablissement autoris√©');
      return true;
    }
    
    // Si l'utilisateur est connect√© mais en tant qu'int√©rimaire
    if (this.authService.isAuthenticated() && this.authService.isUserType('interimaire')) {
      console.log('‚ùå Utilisateur int√©rimaire tente d\'acc√©der √† une page √©tablissement');
      this.router.navigate(['/dashboard-interimaire']);
      return false;
    }
    
    // Sinon rediriger vers la connexion
    console.log('‚ùå Utilisateur non connect√© - redirection vers connexion');
    this.router.navigate(['/connexion-etablissement']);
    return false;
  }
}
